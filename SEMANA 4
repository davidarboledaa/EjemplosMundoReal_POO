# Clase Habitacion: Representa una habitación del hotel
class Habitacion:
    def __init__(self, numero, tipo, precio):
        self.numero = numero        # Número de la habitación
        self.tipo = tipo            # Tipo de habitación (individual, doble, suite, etc.)
        self.precio = precio        # Precio por noche
        self.disponible = True      # Indica si la habitación está disponible o no

    def ocupar(self):
        """Marca la habitación como ocupada."""
        self.disponible = False

    def liberar(self):
        """Marca la habitación como libre."""
        self.disponible = True

    def __str__(self):
        """Representación en cadena de la habitación."""
        return f"Habitación {self.numero} ({self.tipo}) - ${self.precio}/noche - {'Disponible' if self.disponible else 'Ocupada'}"


# Clase Cliente: Representa un cliente que realiza una reserva
class Cliente:
    def __init__(self, nombre, dni):
        self.nombre = nombre        # Nombre del cliente
        self.dni = dni              # Documento de identidad del cliente
        self.reservas = []          # Lista de reservas del cliente

    def realizar_reserva(self, reserva):
        """Permite que el cliente realice una reserva."""
        self.reservas.append(reserva)
        print(f"Reserva realizada por {self.nombre} para la habitación {reserva.habitacion.numero}.")


# Clase Reserva: Representa una reserva de habitación
class Reserva:
    def __init__(self, cliente, habitacion, fecha_inicio, fecha_fin):
        self.cliente = cliente                  # Cliente que realiza la reserva
        self.habitacion = habitacion            # Habitación reservada
        self.fecha_inicio = fecha_inicio        # Fecha de inicio de la reserva
        self.fecha_fin = fecha_fin              # Fecha de finalización de la reserva

        if habitacion.disponible:
            habitacion.ocupar()               # Marca la habitación como ocupada
            cliente.realizar_reserva(self)     # Añade la reserva a la lista de reservas del cliente
        else:
            print(f"La habitación {habitacion.numero} no está disponible.")

    def cancelar(self):
        """Cancela la reserva y libera la habitación."""
        self.habitacion.liberar()               # Libera la habitación
        print(f"Reserva cancelada para la habitación {self.habitacion.numero}.")


# Uso del sistema de reservas

# Crear habitaciones
habitacion1 = Habitacion(101, "Individual", 100)
habitacion2 = Habitacion(102, "Doble", 150)
habitacion3 = Habitacion(103, "Suite", 250)

# Crear un cliente
cliente1 = Cliente("Juan Pérez", "12345678A")

# Realizar una reserva
reserva1 = Reserva(cliente1, habitacion1, "2025-01-12", "2025-01-15")

# Mostrar estado de las habitaciones
print(habitacion1)
print(habitacion2)

# Cancelar la reserva
reserva1.cancelar()

# Ver el estado de las habitaciones después de cancelar la reserva
print(habitacion1)
Explicación del código:
Clase Habitacion:

Tiene atributos como numero, tipo, precio, y disponible.
Los métodos ocupar y liberar permiten marcar la habitación como ocupada o libre.
El método __str__ proporciona una representación de la habitación en forma de texto.
Clase Cliente:

Contiene atributos como nombre, dni y una lista de reservas (reservas).
El método realizar_reserva permite que el cliente haga una reserva, la cual se agrega a su lista de reservas.
Clase Reserva:

La clase tiene atributos como cliente, habitacion, fecha_inicio y fecha_fin.
El método __init__ verifica si la habitación está disponible al momento de realizar la reserva, y si lo está, la marca como ocupada.
El método cancelar permite cancelar una reserva, liberando la habitación.
